% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fm_theme.R
\name{theme_fmlite}
\alias{theme_fmlite}
\alias{scale_fill_fmlite}
\alias{scale_color_fmlite}
\alias{color_finder_fmlite}
\title{Informal Fors Marsh ggplot2 theme}
\usage{
theme_fmlite(fontpath = "C:/Windows/Fonts/", ...)

scale_fill_fmlite(...)

scale_color_fmlite(...)

color_finder_fmlite(color)
}
\arguments{
\item{fontpath}{Path to Berlingske Sans fonts.}

\item{...}{Passes arguments to other methods.}

\item{color}{Character name of a Fors Marsh brand color.}
}
\description{
A \code{ggplot} theme that uses an informal Fors Marsh style.
}
\details{
Many analysts might be looking for a way to incorporate a Fors Marsh style
for less formal deliverables that do not need to be 508 compliant and need
to be easier to work with in markdown documentation where graph sizing
can vary.

The focus of \code{theme_fmlite} is to provide an easy mechanism for analysts to
apply some of the most important elements of the Fors Marsh visual
signature to graphics without many of the constraints imposed by \code{theme_fm}
and its related scales and geoms.

\code{theme_fmlite} is not recommended for formal deliverables without a review
by the Creative Craft Center but can, and should, be applied to
informal graphics like markdowns that may, or may not, be submitted
to clients as documentation.
\subsection{Fors Marsh Theme "Lite"}{

The "lite" theme focuses on text and incorporates the
\emph{Berlingske Sans Medium} font for all text without restrictions on font size.
The plot title for the theme will use \emph{Berlingske Sans Poster}.

Most other aspects of the "lite" theme inherit from \code{\link{theme_bw}} save that
the plot grid is removed to make the background very minimal.

Note that the "lite" theme allows for \code{strip}s (i.e., graph faceting) and
\code{title}s.
}

\subsection{Fors Marsh Theme Colors and Fills}{

The "lite" theme also includes two Fors Marsh color scales:
\code{scale_color_fmlite} and \code{scale_fill_fmlite}. In addition, the "lite" theme
includes a lookup function, \code{color_finder_fmlite} that returns color hex
values given a color name. There are eight total colors and all are named
according to the Fors Marsh brand guide. These names include:
\itemize{
\item Fors Marsh Orange
\item Pastel Pink
\item Aquamarine
\item Blue
\item Deep Orange
\item Tangerine
\item Bright Green
\item Violet
}

Note that \code{scale_color_fmlite} and \code{scale_fill_fmlite} assume you want to
use all eight Fors Marsh brand colors, sequentially, from "Fors Marsh Orange"
to "Violet". Only these eight values work and, beyond eight levels for an
aesthetic, these scales will return nothing and suppress the geoms to which
they are supposed to apply.

As an alternative to \code{scale_color_fmlite} and \code{scale_fill_fmlite},
you can use \code{scale_color_manual} or \code{scale_fill_manual} and plug in
different values using \code{color_finder_fmlite}. For example, a user could
construct a sequence of values using
\code{color_finder_fmlite("Fors Marsh Orange")} and
\code{color_finder_fmlite("Violet")} which return the hex color value
"#FFA219" corresponding with "Fors Marsh Orange" and "#8353FF" corresponding
with "Violet" for contrasting colors in the graph.
}
}
\section{Key Considerations}{


There are no specific considerations for the use of \code{theme_fmlite}. You do
not need to use \code{ggsave_fm} to save graphs with the "lite" theme. You can
use \code{facet_grid} or \code{facet_wrap} with the "lite" theme. You can also use
as many aesthetics as you would like with the "lite" theme. In addition,
you can add titles and captions to the graphics as needed with the "lite"
theme.
}

\examples{
require(ggplot2)
require(datasets)

state_data <-
  data.frame(region = state.region, state.x77) |>
  transform(
    Population =
      cut(Population,
        quantile(Population, probs = c(0, .5, 1)), c("Low", "High"),
        include.lowest = TRUE
      ),
    Income =
      cut(Income,
        quantile(Income, probs = c(0, .5, 1)), c("Low", "High"),
        include.lowest = TRUE
      )
  )

## Example Bar Chart
state_data |>
  aggregate(Illiteracy ~ region + Population, mean, data = _) |>
  ggplot(aes(region, Illiteracy, fill = Population)) + scale_fill_fmlite() +
  geom_col(position = position_dodge()) + theme_fmlite() +
  ggtitle("Illiteracy in 1977")

## Example Line Plot
state_data |>
  ggplot(aes(Illiteracy, HS.Grad, linetype = region, group = region)) +
  scale_linetype_discrete() + theme_fmlite() + scale_linetype_discrete() +
  geom_smooth(method = "lm", se = FALSE,
    color = color_finder_fmlite("Fors Marsh Orange"))

## Example Dot Plot
state_data |>
  ggplot(aes(Illiteracy, HS.Grad, color = region)) +
  geom_point() + theme_fmlite() +
  scale_color_fmlite() +
  facet_grid(cols = vars(Population)) +
  labs(caption = "By Population Level")

}
